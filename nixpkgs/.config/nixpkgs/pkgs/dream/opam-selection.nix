### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    pkgs = self.pkgs;
    repoPath = self.repoPath;
    repos = 
    {
      opam-repository = 
      rec {
        fetch = 
        {
          owner = "ocaml";
          repo = "opam-repository";
          rev = "6442db2bfb03f92548c120b0c33a38b4e471b84e";
          sha256 = "1mr8bxy8ymdjriq0685q869jhvbbb5a2v4qzn5ypm635glmbn1mq";
        };
        src = (pkgs.fetchFromGitHub) fetch;
      };
    };
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.12.0";
  repos = repos;
  selection = 
  {
    angstrom = 
    {
      opamInputs = 
      {
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-syntax-shims = selection.ocaml-syntax-shims;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:07ryik3g3hz79hnfdwxdh2jsw3cmbgygjs7mjdw07p927wkd83k9";
        package = "packages/angstrom/angstrom.0.15.0";
      };
      pname = "angstrom";
      src = pkgs.fetchurl 
      {
        sha256 = "01cjjal8vjsm225v9y0q6ixam8k5f821rcr6yix6i9nzs84aq6gi";
        url = "https://github.com/inhabitedtype/angstrom/archive/0.15.0.tar.gz";
      };
      version = "0.15.0";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    base64 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1xlrmf6920bgsrzycmfp3c6nfylxvfq358cjnjglllh8aiwzsl83";
        package = "packages/base64/base64.3.5.0";
      };
      pname = "base64";
      src = pkgs.fetchurl 
      {
        sha256 = "19735bvb3k263hzcvdhn4d5lfv2qscc9ib4q85wgxsvq0p0fk7aq";
        url = "https://github.com/mirage/ocaml-base64/releases/download/v3.5.0/base64-v3.5.0.tbz";
      };
      version = "3.5.0";
    };
    bigarray-compat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mcg8csmd60ph17vam1s8xjsl9kp6k77i3mnkbxy0jvkn49m4a0k";
        package = "packages/bigarray-compat/bigarray-compat.1.0.0";
      };
      pname = "bigarray-compat";
      src = pkgs.fetchurl 
      {
        sha256 = "1bpmmnxb1yx72aqlbdaqfl18rgz1cq9cf6cqvnfl88mz5dfr4x0d";
        url = "https://github.com/mirage/bigarray-compat/archive/v1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    bigarray-overlap = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        js_of_ocaml-compiler = selection.js_of_ocaml-compiler or null;
        mirage-xen-posix = selection.mirage-xen-posix or null;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:06ipffy0dhx8vh8788mhzgmlj7y2f9nxsgkbbklkn5sf5kj7njdh";
        package = "packages/bigarray-overlap/bigarray-overlap.0.2.0";
      };
      pname = "bigarray-overlap";
      src = pkgs.fetchurl 
      {
        sha256 = "1v86avafsbyxjccy0y9gny31s2jzb0kd42v3mhcalklx5f044lcy";
        url = "https://github.com/dinosaure/overlap/releases/download/v0.2.0/bigarray-overlap-v0.2.0.tbz";
      };
      version = "0.2.0";
    };
    bigstringaf = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        conf-pkg-config = selection.conf-pkg-config;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ap9dz74kl9m09r65dnry69aq6i24v5fzc0xfb8w5v9sf0jfj4rq";
        package = "packages/bigstringaf/bigstringaf.0.7.0";
      };
      pname = "bigstringaf";
      src = pkgs.fetchurl 
      {
        sha256 = "1q4fswcy3n3gja3cnrg3z5wxbl6gh983vsh7ykry6sck961hh2k6";
        url = "https://github.com/inhabitedtype/bigstringaf/archive/0.7.0.tar.gz";
      };
      version = "0.7.0";
    };
    biniou = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1m9s9v4zr7022k6d50482qq7w41fdqp58nkpfhcp8574hg65kh69";
        package = "packages/biniou/biniou.1.2.1";
      };
      pname = "biniou";
      src = pkgs.fetchurl 
      {
        sha256 = "0da3m0g0dhl02jfynrbysjh070xk2z6rxcx34xnqx6ljn5l6qm1m";
        url = "https://github.com/mjambon/biniou/releases/download/1.2.1/biniou-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    caqti = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ptime = selection.ptime;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1n9jcd605lg68r1av57qkdcih3mmkkv1jsy112z0gg8qgv0657lv";
        package = "packages/caqti/caqti.1.6.0";
      };
      pname = "caqti";
      src = pkgs.fetchurl 
      {
        sha256 = "0kb7phb3hbyz541nhaw3lb4ndar5gclzb30lsq83q0s70pbc1w0v";
        url = "https://github.com/paurkedal/ocaml-caqti/releases/download/v1.6.0/caqti-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    caqti-lwt = 
    {
      opamInputs = 
      {
        caqti = selection.caqti;
        dune = selection.dune;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:17vb86x06gnmjxpx25i1rlph0jw331q9p42x2q8gj1lhbnlrp049";
        package = "packages/caqti-lwt/caqti-lwt.1.6.0";
      };
      pname = "caqti-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0kb7phb3hbyz541nhaw3lb4ndar5gclzb30lsq83q0s70pbc1w0v";
        url = "https://github.com/paurkedal/ocaml-caqti/releases/download/v1.6.0/caqti-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    conf-libev = 
    {
      buildInputs = [ (pkgs.libev or null) (pkgs.libev-dev or null)
                       (pkgs.libev-devel or null) ];
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0dyhk3dsvv48kfkhgh4lh0i1vgghb87wxkibn1aiiyws0vgjhilf";
        package = "packages/conf-libev/conf-libev.4-12";
      };
      pname = "conf-libev";
      src = null;
      version = "4-12";
    };
    conf-libssl = 
    {
      buildInputs = [ (pkgs.openssl) ];
      opamInputs = 
      {
        conf-pkg-config = selection.conf-pkg-config;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0nij4w675cr1m50vkfq97fy39mz6jl60fdg7j44psl3m4jgpr9iz";
        package = "packages/conf-libssl/conf-libssl.3";
      };
      pname = "conf-libssl";
      src = null;
      version = "3";
    };
    conf-pkg-config = 
    {
      buildInputs = [ (pkgs.pkgconfig) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0dqmqf1znm1jqbq1m1k2w6021ryavwmj9v1vxxazch4kq4mkxyxf";
        package = "packages/conf-pkg-config/conf-pkg-config.2";
      };
      pname = "conf-pkg-config";
      src = null;
      version = "2";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1nzizaa7q2rnlg7l1rcf4q503lssvmal3vjj8gchcw23sv80j9bp";
        package = "packages/cppo/cppo.1.6.7";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "17ajdzrnmnyfig3s6hinb56mcmhywbssxhsq32dz0v90dhz3wmfv";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.7/cppo-v1.6.7.tbz";
      };
      version = "1.6.7";
    };
    csexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:01lc95kz13gpki4xazyh6n20kv1g9inyb5myv240wl2n9v50z8fl";
        package = "packages/csexp/csexp.1.5.1";
      };
      pname = "csexp";
      src = pkgs.fetchurl 
      {
        sha256 = "00mc19f89pxpmjl62862ya5kjcfrl8rjzvs00j05h2m9bw3f81fn";
        url = "https://github.com/ocaml-dune/csexp/releases/download/1.5.1/csexp-1.5.1.tbz";
      };
      version = "1.5.1";
    };
    cstruct = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0chihlvkngc95b5bi94drkif9i99g8hd67b297qadxy54ljab2hn";
        package = "packages/cstruct/cstruct.6.0.0";
      };
      pname = "cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "0xi6cj85z033fqrqdkwac6gg07629vzdhx03c3lhiwwc4lpnv8bq";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v6.0.0/cstruct-v6.0.0.tbz";
      };
      version = "6.0.0";
    };
    digestif = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        bigarray-compat = selection.bigarray-compat;
        conf-pkg-config = selection.conf-pkg-config;
        dune = selection.dune;
        eqaf = selection.eqaf;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:07fbf8q88fjhx8w31dr1ybpchq0pamhhmhdd8myb193rj1zmncs4";
        package = "packages/digestif/digestif.1.0.0";
      };
      pname = "digestif";
      src = pkgs.fetchurl 
      {
        sha256 = "11188ya6ksb0p0zvs6saz3qxv4a8pyy8m3sq35f3qfxrxhghqi99";
        url = "https://github.com/mirage/digestif/releases/download/v1.0.0/digestif-v1.0.0.tbz";
      };
      version = "1.0.0";
    };
    dream = 
    {
      opamInputs = 
      {
        angstrom = selection.angstrom;
        base-unix = selection.base-unix;
        base64 = selection.base64;
        bigarray-compat = selection.bigarray-compat;
        bigstringaf = selection.bigstringaf;
        caqti = selection.caqti;
        caqti-lwt = selection.caqti-lwt;
        conf-libev = selection.conf-libev;
        cstruct = selection.cstruct;
        digestif = selection.digestif;
        dune = selection.dune;
        faraday = selection.faraday;
        faraday-lwt-unix = selection.faraday-lwt-unix;
        fmt = selection.fmt;
        graphql-lwt = selection.graphql-lwt;
        graphql_parser = selection.graphql_parser;
        hmap = selection.hmap;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        lwt_ssl = selection.lwt_ssl;
        magic-mime = selection.magic-mime;
        mirage-crypto = selection.mirage-crypto;
        mirage-crypto-rng = selection.mirage-crypto-rng;
        multipart_form = selection.multipart_form;
        ocaml = selection.ocaml;
        psq = selection.psq;
        result = selection.result;
        ssl = selection.ssl;
        uri = selection.uri;
        yojson = selection.yojson;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:05x4spv5dgiiqs6n62a5lscjp1iynjr5csazhi3zfpxdqdl5pgdg";
        package = "packages/dream/dream.1.0.0~alpha2";
      };
      pname = "dream";
      src = pkgs.fetchurl 
      {
        sha256 = "00dvp593jlandpsyxq5ndyh492ywl7ya3yld1g1irq571lzw26dz";
        url = "https://github.com/aantron/dream/releases/download/1.0.0-alpha2/dream-1.0.0-alpha2.tar.gz";
      };
      version = "1.0.0-alpha2";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:14avjwn2qy2gy1680jxnklnx7vw93lrw8f6ixhkk8kqkjajapyq4";
        package = "packages/dune/dune.2.8.5";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "0a9n8ilsi3kyx5xqvk5s7iikk6y3pkpm5mvsn5za5ivlzf1i40br";
        url = "https://github.com/ocaml/dune/releases/download/2.8.5/dune-2.8.5.tbz";
      };
      version = "2.8.5";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        csexp = selection.csexp;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0m0i7fkiin3kmd1x7zzs8yxhbkib2kch49j6hzj9vnsbpkcjhknc";
        package = "packages/dune-configurator/dune-configurator.2.8.5";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "0a9n8ilsi3kyx5xqvk5s7iikk6y3pkpm5mvsn5za5ivlzf1i40br";
        url = "https://github.com/ocaml/dune/releases/download/2.8.5/dune-2.8.5.tbz";
      };
      version = "2.8.5";
    };
    duration = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:14dinn9n2669967xdkbpm71xhnba1kilkaqblqscis86nfzdk8h3";
        package = "packages/duration/duration.0.1.3";
      };
      pname = "duration";
      src = pkgs.fetchurl 
      {
        sha256 = "0m9r0ayhpl98g9vdxrbjdcllns274jilic5v8xj1x7dphw21p95h";
        url = "https://github.com/hannesm/duration/releases/download/0.1.3/duration-0.1.3.tbz";
      };
      version = "0.1.3";
    };
    easy-format = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0rjgw1ygf8khwb7vgl5vnw907m8b5mpkb0bnlqiqz9zfmfb4jd47";
        package = "packages/easy-format/easy-format.1.3.2";
      };
      pname = "easy-format";
      src = pkgs.fetchurl 
      {
        sha256 = "09hrikx310pac2sb6jzaa7k6fmiznnmhdsqij1gawdymhawc4h1l";
        url = "https://github.com/mjambon/easy-format/releases/download/1.3.2/easy-format-1.3.2.tbz";
      };
      version = "1.3.2";
    };
    eqaf = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat or null;
        cstruct = selection.cstruct or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:11ingwxll77ni19yb8mdz00hhswrq8jhr2ccnlqla07y36h942w8";
        package = "packages/eqaf/eqaf.0.7";
      };
      pname = "eqaf";
      src = pkgs.fetchurl 
      {
        sha256 = "1q09pwhs121vpficl2af1yzs4y7dd9bc1lcxbqyfc4x4m6p6drhh";
        url = "https://github.com/mirage/eqaf/releases/download/v0.7/eqaf-v0.7.tbz";
      };
      version = "0.7";
    };
    faraday = 
    {
      opamInputs = 
      {
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1wza3im1aiylc0g572hrhx59ylfjh4h4jv72bjxr86f2acgxac04";
        package = "packages/faraday/faraday.0.7.3";
      };
      pname = "faraday";
      src = pkgs.fetchurl 
      {
        sha256 = "06aiwc6kdl9ckgfrakkycj9amsvrf9bnhzgn6xkiwd0kv19raryj";
        url = "https://github.com/inhabitedtype/faraday/archive/0.7.3.tar.gz";
      };
      version = "0.7.3";
    };
    faraday-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        faraday = selection.faraday;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:062w58iy34bhj8m3pzmhycvccwlgl45cihzcigcsivbq67y33wn0";
        package = "packages/faraday-lwt/faraday-lwt.0.7.3";
      };
      pname = "faraday-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "06aiwc6kdl9ckgfrakkycj9amsvrf9bnhzgn6xkiwd0kv19raryj";
        url = "https://github.com/inhabitedtype/faraday/archive/0.7.3.tar.gz";
      };
      version = "0.7.3";
    };
    faraday-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        faraday-lwt = selection.faraday-lwt;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:11qbnryg98ymq7v1vprc29zdadg2iiy4x30mkc9shq6k2533sjsi";
        package = "packages/faraday-lwt-unix/faraday-lwt-unix.0.7.3";
      };
      pname = "faraday-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "06aiwc6kdl9ckgfrakkycj9amsvrf9bnhzgn6xkiwd0kv19raryj";
        url = "https://github.com/inhabitedtype/faraday/archive/0.7.3.tar.gz";
      };
      version = "0.7.3";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1lvq50p7a5i59jqkn4zijxm9p92c6phi20akdj3qbmlnjn8lqs7h";
        package = "packages/fmt/fmt.0.8.9";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "0gkkkj4x678vxdda4xaw2dd44qjacavsvn5nx8gydfwah6pjbkxk";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.9.tbz";
      };
      version = "0.8.9";
    };
    graphql = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        graphql_parser = selection.graphql_parser;
        ocaml = selection.ocaml;
        rresult = selection.rresult;
        seq = selection.seq;
        yojson = selection.yojson;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:07i74v0gzaicqpw8r2g5yl3ssn4f2g00248gn97gwwjcv4pzn9qi";
        package = "packages/graphql/graphql.0.13.0";
      };
      pname = "graphql";
      src = pkgs.fetchurl 
      {
        sha256 = "0gb5y99ph0nz5y3pc1gxq1py4wji2hyf2ydbp0hv23v00n50hpsm";
        url = "https://github.com/andreas/ocaml-graphql-server/releases/download/0.13.0/graphql-0.13.0.tbz";
      };
      version = "0.13.0";
    };
    graphql-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        graphql = selection.graphql;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0yfz8hp3211v8jwk9mqa7ajjig12vx2lsf20ip7aicvrfrj52wnz";
        package = "packages/graphql-lwt/graphql-lwt.0.13.0";
      };
      pname = "graphql-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0gb5y99ph0nz5y3pc1gxq1py4wji2hyf2ydbp0hv23v00n50hpsm";
        url = "https://github.com/andreas/ocaml-graphql-server/releases/download/0.13.0/graphql-0.13.0.tbz";
      };
      version = "0.13.0";
    };
    graphql_parser = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        menhir = selection.menhir;
        ocaml = selection.ocaml;
        re = selection.re;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18i7hkbj4s0a7hj9054qq50591hrlfnrm3kpm9ni934aaywf9pg4";
        package = "packages/graphql_parser/graphql_parser.0.13.0";
      };
      pname = "graphql_parser";
      src = pkgs.fetchurl 
      {
        sha256 = "0gb5y99ph0nz5y3pc1gxq1py4wji2hyf2ydbp0hv23v00n50hpsm";
        url = "https://github.com/andreas/ocaml-graphql-server/releases/download/0.13.0/graphql-0.13.0.tbz";
      };
      version = "0.13.0";
    };
    hmap = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19yc0fm5c0wzxyrwfy3bcb6yh3hbgwrhhh94ggzjs7di8vv9bkv1";
        package = "packages/hmap/hmap.0.8.1";
      };
      pname = "hmap";
      src = pkgs.fetchurl 
      {
        sha256 = "10xyjy4ab87z7jnghy0wnla9wrmazgyhdwhr4hdmxxdn28dxn03a";
        url = "http://erratique.ch/software/hmap/releases/hmap-0.8.1.tbz";
      };
      version = "0.8.1";
    };
    ke = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0wmc14izq43n705nd3qadzq2ydm5h1y9blf72dn2f2bxx5r6glmc";
        package = "packages/ke/ke.0.4";
      };
      pname = "ke";
      src = pkgs.fetchurl 
      {
        sha256 = "13c9xy60vmq29mnwpg3h3zgl6gjbjfwbx1s0crfc6xwvark0zxnx";
        url = "https://github.com/mirage/ke/releases/download/v0.4/ke-v0.4.tbz";
      };
      version = "0.4";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocaml-syntax-shims = selection.ocaml-syntax-shims or null;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19ldxqwj3xvrl6syj0baznwn94a86cnzvmh5x9hdrqgq9p5k4rsw";
        package = "packages/lwt/lwt.5.4.1";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1kyi1sd58fkxc7ymqx68svsijixvvp20ijlv3abkb57qrx3fd44h";
        url = "https://github.com/ocsigen/lwt/archive/refs/tags/5.4.1.tar.gz";
      };
      version = "5.4.1";
    };
    lwt_ppx = 
    {
      buildInputs = [ (pkgs.unzip) ];
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0cn09x7pngyi5ncr3l5ly518nkp2mc0xqz2a19p55bim2na1klr6";
        package = "packages/lwt_ppx/lwt_ppx.2.0.2";
      };
      pname = "lwt_ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "1lv5i3znmiqx6fiq2q1lapsq1bk20bgw7h57wmk9czx9x050a5n5";
        url = "https://github.com/ocsigen/lwt/archive/5.4.0.zip";
      };
      version = "2.0.2";
    };
    lwt_ssl = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ssl = selection.ssl;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1fri84nnlgq0zcmmr2hk19hj8a1d2wg98p41vyq27nj6wmg6h2r2";
        package = "packages/lwt_ssl/lwt_ssl.1.1.3";
      };
      pname = "lwt_ssl";
      src = pkgs.fetchurl 
      {
        sha256 = "0dxxkif4a667ndk14sn8ka4x4gck0gvw4sc12jb84rcq5k15jlkp";
        url = "https://github.com/ocsigen/lwt_ssl/archive/1.1.3.tar.gz";
      };
      version = "1.1.3";
    };
    magic-mime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0kf7gq9k9ycvrs7fjx7alvv0bpysjma3dmqqy4miwj603pkfmj0l";
        package = "packages/magic-mime/magic-mime.1.1.3";
      };
      pname = "magic-mime";
      src = pkgs.fetchurl 
      {
        sha256 = "1xqjs8bba567yzrzgnr88j5ck97d36zw68zr9v29liya37k6rcvz";
        url = "https://github.com/mirage/ocaml-magic-mime/releases/download/v1.1.3/magic-mime-v1.1.3.tbz";
      };
      version = "1.1.3";
    };
    menhir = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        menhirLib = selection.menhirLib;
        menhirSdk = selection.menhirSdk;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:13hy5mhzf47860lbm84nk9r48ivrjyd1hv9i56pvlqb6dcb94ffj";
        package = "packages/menhir/menhir.20210419";
      };
      pname = "menhir";
      src = pkgs.fetchurl 
      {
        sha256 = "1z471apfcfs9d1s85wg33z5prfnifzx07dprjxq4fgfpcbqpqh7q";
        url = "https://gitlab.inria.fr/fpottier/menhir/-/archive/20210419/archive.tar.gz";
      };
      version = "20210419";
    };
    menhirLib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0393sm6qzdffhhkx4sqfmwr6xgl8dab7ap37mfwzyjrjycxbi1k5";
        package = "packages/menhirLib/menhirLib.20210419";
      };
      pname = "menhirLib";
      src = pkgs.fetchurl 
      {
        sha256 = "1z471apfcfs9d1s85wg33z5prfnifzx07dprjxq4fgfpcbqpqh7q";
        url = "https://gitlab.inria.fr/fpottier/menhir/-/archive/20210419/archive.tar.gz";
      };
      version = "20210419";
    };
    menhirSdk = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ss2dh1dak5d5rqi6p6nvplrpi13y0s71fzka8l7djpj15qfcqdx";
        package = "packages/menhirSdk/menhirSdk.20210419";
      };
      pname = "menhirSdk";
      src = pkgs.fetchurl 
      {
        sha256 = "1z471apfcfs9d1s85wg33z5prfnifzx07dprjxq4fgfpcbqpqh7q";
        url = "https://gitlab.inria.fr/fpottier/menhir/-/archive/20210419/archive.tar.gz";
      };
      version = "20210419";
    };
    mirage-crypto = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        conf-pkg-config = selection.conf-pkg-config;
        cstruct = selection.cstruct;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        eqaf = selection.eqaf;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0dhaicqfglmgwhpfnvirwj1h8x3b0bngqml7rqsj6dqzpkwm3asr";
        package = "packages/mirage-crypto/mirage-crypto.0.10.2";
      };
      pname = "mirage-crypto";
      src = pkgs.fetchurl 
      {
        sha256 = "01nr4819xmb0ic303k5j43gy6fq0vwjzmm8wl8mrsb2kldpq5i4n";
        url = "https://github.com/mirage/mirage-crypto/releases/download/v0.10.2/mirage-crypto-v0.10.2.tbz";
      };
      version = "0.10.2";
    };
    mirage-crypto-rng = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        duration = selection.duration;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-crypto = selection.mirage-crypto;
        mtime = selection.mtime;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:14lfacsxwcjqfiamfv02594cxqlmhacchq6dysh7wsf6a6djgkc5";
        package = "packages/mirage-crypto-rng/mirage-crypto-rng.0.10.2";
      };
      pname = "mirage-crypto-rng";
      src = pkgs.fetchurl 
      {
        sha256 = "01nr4819xmb0ic303k5j43gy6fq0vwjzmm8wl8mrsb2kldpq5i4n";
        url = "https://github.com/mirage/mirage-crypto/releases/download/v0.10.2/mirage-crypto-v0.10.2.tbz";
      };
      version = "0.10.2";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    mtime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1pvlkp6n3z75mjc5y0nvhf2s7fmzj8k84chwzvmyrpb786s9gqyh";
        package = "packages/mtime/mtime.1.2.0";
      };
      pname = "mtime";
      src = pkgs.fetchurl 
      {
        sha256 = "0zm1jvqkz3ghznfsm3bbv9q2zinp9grggdf7k9phjazjvny68xb8";
        url = "https://erratique.ch/software/mtime/releases/mtime-1.2.0.tbz";
      };
      version = "1.2.0";
    };
    multipart_form = 
    {
      opamInputs = 
      {
        angstrom = selection.angstrom;
        base64 = selection.base64;
        bigarray-compat = selection.bigarray-compat;
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        fmt = selection.fmt;
        ke = selection.ke;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        pecu = selection.pecu;
        prettym = selection.prettym;
        result = selection.result;
        rresult = selection.rresult;
        stdlib-shims = selection.stdlib-shims;
        unstrctrd = selection.unstrctrd;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18g06z6x6ark259y0vs502ijw7r7fm7hn9r61f3my8p8f844sg6z";
        package = "packages/multipart_form/multipart_form.0.3.0";
      };
      pname = "multipart_form";
      src = pkgs.fetchurl 
      {
        sha256 = "05cbs2fqvyg67nmyfi8cp8bzl3yzkzw1w2az8brdkxcw1cq9xkgl";
        url = "https://github.com/dinosaure/multipart_form/releases/download/v0.3.0/multipart_form-v0.3.0.tbz";
      };
      version = "0.3.0";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0xrq7j9zfynk524j69i3and0mqgi32wav751s4cqc1q7pqm47xpc";
        package = "packages/ocaml/ocaml.4.12.0";
      };
      pname = "ocaml";
      src = null;
      version = "4.12.0";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0gf3z9qmi976x4iwndfslcim50ickla52x9fp94aqxrgvsy1ypn7";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.12.0";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "0i37laikik5vwydw1cwygxd8xq2d6n35l20irgrh691njlwpmh5d";
        url = "https://github.com/ocaml/ocaml/archive/4.12.0.tar.gz";
      };
      version = "4.12.0";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jxaxfbb6cpyfcfmrr6602vni74adqagphhqlvcyaddm9cjbmwma";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.3";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jg32fjr7n4933r01iqgablshagx20vgjkjh5pdbn54w8cqkah58";
        url = "https://github.com/janestreet/ocaml-compiler-libs/releases/download/v0.12.3/ocaml-compiler-libs-v0.12.3.tbz";
      };
      version = "v0.12.3";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0h0hgqq9mbywvqygppfdc50gf9ss8a97l4dgsv3hszmzh6gglgrg";
        package = "packages/ocaml-config/ocaml-config.2";
      };
      pname = "ocaml-config";
      src = null;
      version = "2";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18cw30az9wgpqjvg7fcdjgxzi294nkxriilan81nxw7bszmhs08l";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.2.1.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "07x7lm45kny0mi0fjvzw51445brm0dgy099cw0gpyly0wj77hyrq";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v2.1.0/ocaml-migrate-parsetree-v2.1.0.tbz";
      };
      version = "2.1.0";
    };
    ocaml-syntax-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0qnm1db0298yqcn6j9fmb0l4gr5nhcar8plskj39917invyamgd2";
        package = "packages/ocaml-syntax-shims/ocaml-syntax-shims.1.0.0";
      };
      pname = "ocaml-syntax-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1j7848khli4p7j8i2kmnvhdnhcwhy3zgdpf5ds5ic30ax69y3cl9";
        url = "https://github.com/ocaml-ppx/ocaml-syntax-shims/releases/download/1.0.0/ocaml-syntax-shims-1.0.0.tbz";
      };
      version = "1.0.0";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:11avrzm0gdc6mz7dazr8q18ir5429ckc36s2mv0l8722znq8lc3k";
        package = "packages/ocamlfind/ocamlfind.1.9.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "1qhgk25avmz4l4g47g8jvk0k1g9p9d5hbdrwpz2693a8ajyvhhib";
        url = "http://download.camlcity.org/download/findlib-1.9.1.tar.gz";
      };
      version = "1.9.1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0j5ymxa4ky208k8m4bprvmvbqf9jnr4d0xwdaivznbv85jq9hw4q";
        package = "packages/ocplib-endian/ocplib-endian.1.1";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0qy5q7p11gxi5anhvi8jj6mr80ml0ih8lax5k579rsr2hsp3sns5";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.1.tar.gz";
      };
      version = "1.1";
    };
    pecu = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0rbs4i5fv456wx57imrwvg4b6rrvap7gg0a3cyfigjbypxg1g5pw";
        package = "packages/pecu/pecu.0.5";
      };
      pname = "pecu";
      src = pkgs.fetchurl 
      {
        sha256 = "1rz0y0i1nsjpjclql87jwmyyzzw39r47cifr4sd61x53dg6m6dvi";
        url = "https://github.com/mirage/pecu/releases/download/v0.5/pecu-v0.5.tbz";
      };
      version = "0.5";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_derivers = selection.ppx_derivers;
        sexplib0 = selection.sexplib0;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vaz2a2dvwim7sd0wjgcwprgy30viy3m5bv5h5kswvgvpd5m87wg";
        package = "packages/ppxlib/ppxlib.0.22.1";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "1xy5d3ssnrwqiqacna18y45sxfb9pclzw3g6s7qdkj86wqp80v11";
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.22.1/ppxlib-0.22.1.tbz";
      };
      version = "0.22.1";
    };
    prettym = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        bigarray-overlap = selection.bigarray-overlap;
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        fmt = selection.fmt;
        ke = selection.ke;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1r4w04n5x7a20s78izkf765d2mfz72aa9zfbfwpc91fyn7rb2j8c";
        package = "packages/prettym/prettym.0.0.1";
      };
      pname = "prettym";
      src = pkgs.fetchurl 
      {
        sha256 = "1d4mds7z5b81m8ipngnz79il3csnyjmxbs2iyshz0z8q435xw829";
        url = "https://github.com/dinosaure/prettym/releases/download/0.0.1/prettym-0.0.1.tbz";
      };
      version = "0.0.1";
    };
    psq = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0bbyscl3az6vi6rncif7f8da7br78870qql5vlmg56w7ka3sgj9s";
        package = "packages/psq/psq.0.2.0";
      };
      pname = "psq";
      src = pkgs.fetchurl 
      {
        sha256 = "1j4lqkq17rskhgcrpgr4n1m1a2b1x35mlxj6f9g05rhpmgvgvknk";
        url = "https://github.com/pqwy/psq/releases/download/v0.2.0/psq-v0.2.0.tbz";
      };
      version = "0.2.0";
    };
    ptime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ldzn2jmz8c3n9rr4mqyfa92lkb3378cmik3klznbln7lsf4fa1v";
        package = "packages/ptime/ptime.0.8.5";
      };
      pname = "ptime";
      src = pkgs.fetchurl 
      {
        sha256 = "1fxq57xy1ajzfdnvv5zfm7ap2nf49znw5f9gbi4kb9vds942ij27";
        url = "https://erratique.ch/software/ptime/releases/ptime-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    re = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1iylcsjy7225ilcy8d0f5wz5lm0sx0xz0cnq2l8pfbyll9vxvawy";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl 
      {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ybmvlisfz5swvbcq855czz1ysv9zxmb79f1m0x8284hczmfm98f";
        package = "packages/result/result.1.5";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
      };
      version = "1.5";
    };
    rresult = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:10vaq82rzip2rn1rbq27pjckvqassjh1n58pnsypldqaahxnbca6";
        package = "packages/rresult/rresult.0.6.0";
      };
      pname = "rresult";
      src = pkgs.fetchurl 
      {
        sha256 = "1k69a3gvrk7f2cshwjzvk7818f0bwxhacgd14wxy6d4gmrggci86";
        url = "http://erratique.ch/software/rresult/releases/rresult-0.6.0.tbz";
      };
      version = "0.6.0";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0k9vkjbiibja48c0yayal7xwyik3h3c3v4dwd3j7jbmras63ig2c";
        package = "packages/sexplib0/sexplib0.v0.14.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "0adrc0r1vvvr41dcpj8jwkzh1dfgqf0mks9xlnnskqfm3a51iavg";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib0-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ssl = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conf-libssl = selection.conf-libssl;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:07461j0kfgn29y9pvigywxijm8nx0f5d8w706y88ya3223lhi2j9";
        package = "packages/ssl/ssl.0.5.10";
      };
      pname = "ssl";
      src = pkgs.fetchurl 
      {
        sha256 = "0vcc8p6i8lhs59y3ycikllc6j1adh9syh63g5ibnrp3yz3lk2cwl";
        url = "https://github.com/savonet/ocaml-ssl/archive/v0.5.10.tar.gz";
      };
      version = "0.5.10";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19g9dnaxyh2ajz6pdczdsqzzvsmfrxwx6f613inkr31jw5hrqkiz";
        package = "packages/stdlib-shims/stdlib-shims.0.3.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "0jnqsv6pqp5b5g7lcjwgd75zqqvcwcl5a32zi03zg1kvj79p5gxs";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.3.0/stdlib-shims-0.3.0.tbz";
      };
      version = "0.3.0";
    };
    stringext = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1yjysjb40yjhqmcx3z12y2nmr2qy215qdnvdns1hxip0fjcd4zkz";
        package = "packages/stringext/stringext.1.6.0";
      };
      pname = "stringext";
      src = pkgs.fetchurl 
      {
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
        url = "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
      };
      version = "1.6.0";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1asjip3cr84b1n1n4q8b5zrcki87niz6imb9m9zaj2kqdywmp0m5";
        package = "packages/topkg/topkg.1.0.3";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "0b77gsz9bqby8v77kfi4lans47x9p2lmzanzwins5r29maphb8y6";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.3.tbz";
      };
      version = "1.0.3";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    unstrctrd = 
    {
      opamInputs = 
      {
        angstrom = selection.angstrom;
        dune = selection.dune;
        ocaml = selection.ocaml;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1iymq71d8av17jrzny7xmr7kih3ll0pxd14rippxymxmlhs6xhiy";
        package = "packages/unstrctrd/unstrctrd.0.2";
      };
      pname = "unstrctrd";
      src = pkgs.fetchurl 
      {
        sha256 = "0yb9n7zrdvcsawwjj9dxfwqc9gq12bmaynnfyjm5yd0s876vyh0h";
        url = "https://github.com/dinosaure/unstrctrd/releases/download/v0.2/unstrctrd-v0.2.tbz";
      };
      version = "0.2";
    };
    uri = 
    {
      opamInputs = 
      {
        angstrom = selection.angstrom;
        dune = selection.dune;
        ocaml = selection.ocaml;
        stringext = selection.stringext;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1s0rbjixhl1ypxv9xxmldlmxm6gj9rrzmcgydp8dna4n0wza4hbf";
        package = "packages/uri/uri.4.2.0";
      };
      pname = "uri";
      src = pkgs.fetchurl 
      {
        sha256 = "0szifda6yism5vn5jdizkha3ad0xk6zw4xgfl8g77dnv83ci7h65";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v4.2.0/uri-v4.2.0.tbz";
      };
      version = "4.2.0";
    };
    uutf = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1j4hkk196lg1dsnf6jb1n8y3na606lkfb5vlr0gjb53qc7pdh6cy";
        package = "packages/uutf/uutf.1.0.2";
      };
      pname = "uutf";
      src = pkgs.fetchurl 
      {
        sha256 = "1nx1rly3qj23jzn9yk3x6fwqimcxjd84kv5859vvhdg56psq26p6";
        url = "http://erratique.ch/software/uutf/releases/uutf-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    yojson = 
    {
      opamInputs = 
      {
        biniou = selection.biniou;
        cppo = selection.cppo;
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1n8iih0jmaf9b0hsv6ph729jajws9w43kgm24324p4wlj45rjs2q";
        package = "packages/yojson/yojson.1.7.0";
      };
      pname = "yojson";
      src = pkgs.fetchurl 
      {
        sha256 = "1iich6323npvvs8r50lkr4pxxqm9mf6w67cnid7jg1j1g5gwcvv5";
        url = "https://github.com/ocaml-community/yojson/releases/download/1.7.0/yojson-1.7.0.tbz";
      };
      version = "1.7.0";
    };
  };
}

